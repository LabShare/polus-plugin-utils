"""Run the montaging tool from the command line."""
import logging
import os
import pathlib
import typing

import typer

from polus.plugins.transforms.images.montage import __version__, montage
from polus.plugins.transforms.images.montage.montage import MULTIPLIER, SPACING

# Initialize the logger
logging.basicConfig(
    format="%(asctime)s - %(name)-8s - %(levelname)-8s - %(message)s",
    datefmt="%d-%b-%y %H:%M:%S",
)
logger = logging.getLogger("polus.plugins.transforms.images.montage")
logger.setLevel(os.environ.get("POLUS_LOG", logging.INFO))


def _main(
    pattern: str = typer.Option(
        ..., "--filePattern", help="FilePattern used to parse data."
    ),
    inp_dir: pathlib.Path = typer.Option(
        ..., "--inpDir", help="Specify montage organization."
    ),
    layout: str = typer.Option(..., "--layout", help="Specify montage organization."),
    out_dir: pathlib.Path = typer.Option(..., "--outDir", help="Output collection."),
    flip_axis: typing.Optional[typing.List[str]] = typer.Option(
        None, "--flipAxis", help="Axes to flip or reverse order."
    ),
    image_spacing: typing.Optional[int] = typer.Option(
        SPACING,
        "--imageSpacing",
        help="Spacing between images in the smallest subgrid.",
    ),
    grid_spacing: typing.Optional[int] = typer.Option(
        MULTIPLIER,
        "--gridSpacing",
        help="Spacing between values in the same grid level.",
    ),
    preview: typing.Optional[bool] = typer.Option(
        False, help="Output a JSON preview of files generated by this tool."
    ),
) -> None:
    """Advanced montaging tool."""
    logger.debug(f"version: {__version__}")

    # # Parse the arguments
    logger.info(f"filePattern = {pattern}")
    logger.info(f"inpDir = {inp_dir}")
    logger.info(f"layout = {layout}")
    logger.info(f"flipAxis = {flip_axis}")
    logger.info(f"outDir = {out_dir}")
    logger.info(f"imageSpacing = {image_spacing}")
    logger.info(f"gridSpacing = {grid_spacing}")

    montage(pattern, inp_dir, layout, flip_axis, out_dir, image_spacing, grid_spacing)


typer.run(_main)
